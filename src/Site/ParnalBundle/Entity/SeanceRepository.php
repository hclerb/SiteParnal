<?php

namespace Site\ParnalBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Site\ParnalBundle\Entity\Film;
use Site\ParnalBundle\Entity\Image;
/**
 * SeanceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SeanceRepository extends EntityRepository
{
   public function getByDate(\Datetime $date1) 	
    { 		
        $queryBuilder = $this->createQueryBuilder('s'); 	 
        $queryBuilder->where('s.jour >= :date1 ')
		->setParameter('date1', $date1->format('Y-m-d H:i:s'));
        $queryBuilder->orderBy('s.jour', 'ASC');
        $query = $queryBuilder->getQuery(); 		 	  
        return $query->getResult();
	
    }

   public function findrestfilm()
   {
       $datejour = new \DateTime();
       $queryBuilder = $this->createQueryBuilder('s')
                     ->innerJoin('s.lefilm', 'f')
                     ->addSelect('f');
       $queryBuilder->where('s.jour >= :date1 ')
                     ->setParameter('date1', $datejour->format('Y-m-d H:i:s'))
                     ->andWhere('s.scolaire = 0')
                     ->groupBy('s.lefilm')
                     ->orderBy('s.jour','ASC');
              
       return $queryBuilder->getQuery()
                           ->getArrayResult();
   }
   
   public function findrest()
   {
       $datejour = new \DateTime();
       $queryBuilder = $this->createQueryBuilder('s')
                     ->innerJoin('s.lefilm', 'f')
                     ->addSelect('f.id');
       $queryBuilder->where('s.jour >= :date1 ')
                     ->setParameter('date1', $datejour->format('Y-m-d H:i:s'))
                     ->andWhere('s.scolaire = 0')
                     ->orderBy('s.jour','ASC');
              
       return $queryBuilder->getQuery()
                           ->getArrayResult();
   }

   public function findrestfilmentredate(\Datetime $date1, \Datetime $date2)
   {
       $queryBuilder = $this->createQueryBuilder('s')
                     ->innerJoin('s.lefilm', 'f')
                     ->addSelect('f');
       $queryBuilder->where('s.jour >= :date1 ')
                    ->setParameter('date1', $date1->format('Y-m-d H:i:s')); 
       $queryBuilder->andWhere('s.jour <= :date2 ')
                    ->setParameter('date2', $date2->format('Y-m-d H:i:s'))
                    ->andWhere('s.scolaire = 0')
                     ->groupBy('s.lefilm')
                     ->orderBy('s.jour','ASC');
              
       return $queryBuilder->getQuery()
                           ->getArrayResult();
   }
   
   /*public function findbetweendate(\Datetime $date1, \Datetime $date2)
   {
       $queryBuilder = $this->createQueryBuilder('s')
                     ->innerJoin('s.lefilm', 'f')
                     ->addSelect('f.id');
       $queryBuilder->where('s.jour >= :date1 ')
                    ->setParameter('date1', $date1->format('Y-m-d H:i:s')); 
       $queryBuilder->andWhere('s.jour <= :date2 ')
                    ->setParameter('date2', $date2->format('Y-m-d H:i:s'))
                    ->andWhere('s.scolaire = 0');
       $queryBuilder->orderBy('s.jour','ASC');

       return $queryBuilder->getQuery()
                           ->getArrayResult();
   } */
   
  public function findbetweendate(\Datetime $date1, \Datetime $date2)
   {
       $queryBuilder = $this->createQueryBuilder('s');
       $queryBuilder->where('s.jour >= :date1 ')
                    ->setParameter('date1', $date1->format('Y-m-d H:i:s')); 
       $queryBuilder->andWhere('s.jour <= :date2 ')
                    ->setParameter('date2', $date2->format('Y-m-d H:i:s'))
                    ->andWhere('s.scolaire = 0');
       $queryBuilder->orderBy('s.jour','ASC');

       return $queryBuilder->getQuery()
                           ->getResult();
   } 
  
   public function findByordre()
   {
        $queryBuilder = $this->createQueryBuilder('s'); 	 
        $queryBuilder->orderBy('s.jour', 'ASC');
       return $queryBuilder->getQuery()
                           ->getResult();    
   }
 
   public function findseancethefilm($idfilm)
   {
       $datejour = new \DateTime();
       $queryBuilder = $this->createQueryBuilder('s');
       $queryBuilder->where('s.jour >= :date1 ')
                     ->setParameter('date1', $datejour->format('Y-m-d H:i:s'))
                     ->andWhere('s.lefilm = :idfilm')
                     ->andWhere('s.scolaire = 0')
                     ->setParameter('idfilm', $idfilm)
                     ->orderBy('s.jour','ASC');
              
       return $queryBuilder->getQuery()
                           ->getResult();
   }
   public function findrestadmin()
   {
       $datejour = new \DateTime();
       $queryBuilder = $this->createQueryBuilder('s');
       $queryBuilder->where('s.jour >= :date1 ')
                     ->setParameter('date1', $datejour->format('Y-m-d H:i:s'))
                     ->orderBy('s.jour','ASC');
              
       return $queryBuilder->getQuery()
                           ->getResult();
   }

      public function findbetweendateadmin(\Datetime $date1, \Datetime $date2)
   {
       $queryBuilder = $this->createQueryBuilder('s');
       $queryBuilder->where('s.jour >= :date1 ')
                    ->setParameter('date1', $date1->format('Y-m-d H:i:s')); 
       $queryBuilder->andWhere('s.jour <= :date2 ')
                    ->setParameter('date2', $date2->format('Y-m-d H:i:s'));
       $queryBuilder->orderBy('s.jour','ASC');

       return $queryBuilder->getQuery()
                           ->getResult();
   } 
   
   public function findincompadmin()
   {
       $datejour = new \DateTime();
       $queryBuilder = $this->createQueryBuilder('s');
       $queryBuilder->where('s.nbpayants = 0 ')
                     ->orderBy('s.jour','ASC');
              
       return $queryBuilder->getQuery()
                           ->getResult();
   }   
}